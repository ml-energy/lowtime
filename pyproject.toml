[build-system]
requires = ["maturin>=1.7,<2.0"]
build-backend = "maturin"

[project]
name = "lowtime"
description = "A library for solving the time-cost tradeoff problem."
version="0.3.0"  # keep synced with __init__.py, Cargo.toml
readme = "README.md"
authors = [
    {name = "Jae-Won Chung", email = "jwnchung@umich.edu"},
    {name = "Yile Gu", email = "yilegu@umich.edu"},
    {name = "Oh Jun Kweon", email = "ohjun@umich.edu"},
]
license = {text = "Apache 2.0"}
classifiers = [
    "Typing :: Typed",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Rust",
]
keywords = ["optimization", "tradeoff", "DAG"]
requires-python = ">=3.8"
dependencies = [
    "scikit-learn",
    "matplotlib",
    "attrs",
    "numpy",
    "networkx",
]

[tool.maturin]
module-name = "lowtime._lowtime_rs"
features = ["pyo3/extension-module"]

[project.urls]
Repository = "https://github.com/ml-energy/lowtime"

[project.optional-dependencies]
lint = ["ruff", "black"]
test = ["pytest"]
dev = ["ruff", "black", "pytest", "tyro", "pandas", "pyright"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
  "E",   # pycodestyle error
  "F",   # pyflakes
  "D",   # pydocstyle
  "PL",  # pylint
  "N",   # pep8-naming
  "B",   # flake8-bugbear (detects likely bugs)
  "G",   # flake8-logging-format (complains about logging)
  "SIM", # flake8-simplify (suggests code simplifications)
]
ignore = [
  "PLW0603",  # Global statement
  "B019",     # Usage of functools.lru_cache
  "PLR0913",  # Too many function arguments
  "PLR0912",  # Too many branches
  "B905",     # zip strict argument
  "PLR0915",  # Too many statements
  "PLR2004",  # Magic values
  "SIM115",   # Context manager for opening files
  "E501",     # Line too long
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401", "F403"]

[tool.pyright]
stubPath = "./stubs/stubs"
